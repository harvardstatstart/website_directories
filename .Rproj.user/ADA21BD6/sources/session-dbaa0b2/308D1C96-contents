---
title: "How To Make A Personal Website with Hugo using R, Rstudio, Git, Github"
author: "Jenny Lee"
date: "July 6th, 2023"
output:
  ioslides_presentation:
    widescreen: true
    # smaller: true
    highlight: tango
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Section 1: Introduction

## Hugo

* [Hugo](https://gohugo.io/) is one of the most popular programs available for building sites from Markdown files a

* The advantages are that:
  + it requires some (minimal) coding experience.
  + it produces a beautiful and professional website that is ad free.  
  + it can be hosted for free with [GitHub Pages](https://pages.github.com/). 
  + integrates nicely with the [`blogdown`](https://bookdown.org/yihui/blogdown/) R package, letting you write your website entirely in R.
  + Hugo offers many other website templates 
  
## Prerequisites

* Install [R for Windows](https://cran.r-project.org/bin/windows/base/) or [R for Mac](https://cran.r-project.org/bin/macosx/).
* Install [Rstudio](https://posit.co/download/rstudio-desktop/).
* Install [Git](https://git-scm.com/downloads).
* Create [Github account](https://github.com/login).

# Section 2: Let's create a website!

## Step 1: Install Blogdown and Hugo

* Install `Blogdown` R package, a the program that will allow you to build and deploy your website, and Hugo, which is the template generator.

* In the RStudio and type the following commands

```{r, eval=FALSE}
# Install blogdown
install.packages("blogdown")

# Install Hugo
blogdown::install_hugo()
```

## Step 2: Create a demo websites
1. Open RStudio and select New Project.
![](./images/new_project.png)
## Step 2: Create a demo website
2. Select New Directory when asked where to create the project.
![](./images/new_project2.png)
## Step 2: Create a demo website
3. Then select Website using blogdown as project type.
![](./images/new_project3.png)
## Step 2: Create a demo website
4. Now you have to select a couple of options:

* **Directory name**: input the name of the folder which will contain all the website files (e.g. `yourfoldername`).
* **Create project as a subdirectory of**: select the directory in which you want to save the website folder.
* **Theme**: input `wowchemy/starter-academic` instead of the default theme `yihui/hugo-lithium`.
  - *Note*: There are different [hugo themes](https://themes.gohugo.io/), e.g. click "download" button on "story" theme page, which will direct you to a [hugo-story github](https://github.com/caressofsteel/hugo-story)). Instead of `wowchemy/starter-academic`, insert `caressofsteel/hugo-story`.

![](./images/new_project_wizard_template.png)

## Step 3: Build a Website

1. To build the website, open the RProject file `yourfoldername.Rproj` in RStudio and type the below.
```{r, eval=F}
blogdown::hugo_build(local=TRUE)
```

![](./images/hugo_build.png)
## Step 3: Build a Website

2. `blogdown::hugo_build(local=TRUE)` command will generate a `public/` subfolder in which the actual code of the website is stored. After updating, re-run the below code to update `public/` folder. 
![](./images/widgets_public.png)

## Step 3: Preview the Website

3. Previewing the website is very useful as it allows you to see live changes locally inside RStudio, before publishing them. 
```{r, eval=F}
blogdown::serve_site()
```

The following preview should automatically open in your browser.
![](./images/preview.png)

## Step 3: Preview the Website

If the preview does not automatically open in your browser, and instead it previews inside RStudio "Viewer" panel, you can preview it in your browser by clicking the upper left right-most button.

![](./images/preview2.png)
# Section 3: Let's Customize!

## Step 1: Understanding `/content/_index.md`

* In order to modify the widgets in the first page of the website, go to `/content/_index.md`. 
* Each widget is separated by `- block:`.
  - `- block: hero`: Hugo academic theme advertisement.
  - `- block:about.avatar` brings your information from `content/authors/admin/_index.md`.
  - `- block:collection` creates widgets for posts and publications.
  - `- block:portfolio` for projects.
  - `- block:markdown` for gallery. 
  
![](./images/content_folder.png)
## Step 2: Remove Hugo academic theme advertisement

* `- block: hero`: remove this section.
  
![](./images/remove_block_hero.png)


* *Note* that previosuly `/content/home/` included several markdown files corresponding to each widget such as `/content/home/about.md` and `/content/home/publications.nd`. In this version, if you want to remove a section, just open the corresponding file and select `active: false`. If there is no active option, just copy the line `active: false` in the corresponding file.
![](./images/widgets.png)

```{r, engine = 'bash', eval = FALSE}
######   About myself
- block: about.avatar
  content:
    text: null
    username: admin
  id: about
######   Contact
- block: contact
  content:
    form:
      formspree:
        id: null
      netlify:
        captcha: false
      provider: netlify
    title: Contact
  design:
    columns: "2"
  id: contact
title: null
type: landing
```


## `config/_default/config.yaml`: general website information
```{r, engine = 'bash', eval = FALSE}
title: JENNY LEE # Website name
```


## `config/_default/params.yaml`: website customization
```{r, engine = 'bash', eval = FALSE}
repository:
    url: 'https://github.com/jennyjyounglee/jennyjyounglee.github.io'
```

## `config/_default/menus.yaml`: top bar / menu customization
  * `name`: represents a name for the menu bar
  * `url: #about`: link to a homepage widget with `id: about`
  * `URL: '/post'`: link to separate page with posts
```{r, engine = 'bash', eval = FALSE}
main:
  - name: Home
    url: '#about' # link to a homepage widget
    weight: 10
  - name: Posts
    URL: '/post' # direct to a separate page
    weight: 20
  - name: Projects
    URL: '/project'
    weight: 30
  - name: Talks
    URL: '/event'
    weight: 40
  - name: Publications
    URL: '/publication'
    weight: 50
  - name: Contact
    url: '#contact'
    weight: 60
```
  
  
## Personal information on about myself in the home page`/content/authors/admin/_index.md`: 

* Profile picture: update `/content/authors/admin/avatar.jpg `to your profile photo.
* Website icon: change the `assets/media/icon.png` picture  

![](./images/images.png)

# Advanced Custmoization

## Nested menu

[nested menu](https://gohugo.io/content-management/menus/): In this website, I created two sub-menus, `Hugo,R,Git` and `Archive` under `post` menu. To do so 
1. Create `content/post/website/` and `content/post/archive/`. Then, add `Rmd` file under these folders.
2. Add `_index.md` file under each `content/post/website/` and `content/post/archive/`. For example, `content/post/website/_index.md` looks as below:
```{r, engine = 'bash', eval = FALSE}
  ---
cms_exclude: true
header:
  caption: ""
  image: ""
title: Hugo,R,Git
view: 2
---
```

3. Update `menus.yaml` file adding the below to the previous version of `menus.yaml`:
```{r, engine = 'bash', eval = FALSE}
main:
  - name: Posts
    URL: '/post' # direct to a separate page
    weight: 20
  - name: Hugo, R, Git
    URL: '/post/website'
    parent: Posts
    weight: 1
  - name: Archive
    URL: '/post/archive'
    parent: Posts
    weight: 2
```

## Menu with only one R markdown file

1. Create `content/test/` folder and created `_index.md` file.
2. Update `config/menus.yaml` to additionally include the below after `main:` argument.
```{r, engine = 'bash', eval = FALSE}
main:
 - name: Test
    URL: '/test'
    weight: 60
```

Then, this will create a `test` menu corresponding to `_index.md`.

## Menu linked to the external file

Update `config/menus.yaml` to additionally include the below after `main:` argument.
```{r, engine = 'bash', eval = FALSE}
main:
- name: CV
    params:
      rel: external
    url: https://jennyjyounglee.github.io/TemplatePKGWebsite/
    weight: 70
```

This will create `CV` tab that linked to `https://jennyjyounglee.github.io/TemplatePKGWebsite/`.

# Section 4: Publish the website

## Step 4: Publish the Website

There are several ways to publish website:
* deploy a Hugo site to [Netlify](https://www.netlify.com/): didn't worked well for me.
  - References: <https://seanlee0622.medium.com/create-and-publish-a-website-with-r-and-hugo-2b7d1ff236f5>
* deploy with a secret key from the Github: haven't tried.
  - Reference: <https://lakemper.eu/blog/getting-started-with-hugo-academic-and-github-pages/>
* change the name of `/public` folder to `/doc` folder: didn't worked for me.
  - Reference: <https://4bes.nl/2021/08/29/create-a-website-with-hugo-and-github-pages/>
* upload only `/public` to the Github: only method that worked!
  - Reference: <https://matteocourthoud.github.io/post/website/website/#basic-customization>

Importantly, before pushing the code online, you need to open the file `config.yaml` and change the baseurl to your future website url, which will be `https://username.github.io/`, where username is your Github username.

![](./images/username.png)

Now that you have set the correct url, you have to push the changes from the `public/` folder to your `username.github.io` repository on Github.

To do that, you need to get to the website folder. Letâ€™s assume that the path to your folder is `Documents/username.github.io`. Open the Terminal and type
```{r, engine = 'bash', eval = FALSE}
cd Documents/username.github.io/public
```
The following code will link the `public/` folder, containing the actual code of the website, to your `username.github.io` repository.

```{r, engine = 'bash', eval = FALSE}
# Init git in the /website/public/ folder
git init

# Add and commit the changes
git add .
git commit -m "first version of the website"

# Set origin
git remote add origin https://github.com/username/username.github.io.git

# Rename local branch
git branch -M main

# And push your updates online
git push -u origin main
```
Wait a few seconds (or minutes for heavy changes) and your website should be online!
![](./images/preview_website.png)

If the website is not working, you can check the following:

* Is there anything in your `public/` folder? (does it even exist?) If not, something went wrong when compiling the website with `blogdown::hugo_build()`.
* Inside your `public/` folder, there should be an `index.html` file. If you double-click on it, you should see a local preview of your website in your browser. If not, something in the website code is wrong.
* Is the content of your public/ folder exactly the same as the content of your Github repository? If not, something went wrong when pushing to Github.
* Did you name your Github repository username.github.io, where username is your Github username?
* Did you change the baseurl option in the file config.yaml to `https://username.github.io/`, where username is your Github username?
* You can check the list of websites deployments at `https://github.com/username/username.github.io/deployments`. Control that they correspond with your commits.


If all the conditions are satisfied, but the website is still not online, maybe itâ€™s just a matter of time. Have some patience.
![](./images/workflow.png)


# References

Here are the main resources I used to write this guide:

* Wowchemy website: 
  - <https://wowchemy.com/docs/getting-started/>
  - <https://wowchemy.com/docs/getting-started/get-started/>
* by Matteo Courthoud: <https://matteocourthoud.github.io/post/website/#basic-customization>
* by Michael Schlottke-Lakemper: <https://lakemper.eu/blog/getting-started-with-hugo-academic-and-github-pages/>
* by Martin J Frigaard: <https://hackmd.io/@mfrigaard/HJrcTTbV_>
* Sub-menu: <https://gohugo.io/content-management/menus/>

Resources that might be useful in the future
* by Emmanuel Teitelbaum: <https://www.emmanuelteitelbaum.com/post/managing-pubs-academic-website/>